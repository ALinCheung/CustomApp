apply plugin: 'com.android.application'

def profile = System.getProperty("profile") ?: "dev"
def configs = rootProject.ext.android
def library = rootProject.ext.dependencies

android {
    compileSdkVersion configs.compileSdkVersion
    buildToolsVersion configs.buildToolsVersion
    defaultConfig {
        applicationId "com.alin.android.app"
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            lintOptions {
                checkReleaseBuilds false
                // Or, if you prefer, you can continue to check for errors in release builds,
                // but continue the build even when errors are found:
                abortOnError false
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            res.srcDirs = [
                "src/main/res/layout/picker",
                "src/main/res/layout/rotate",
                "src/main/res/layout/browser",
                "src/main/res/layout/calculator",
                "src/main/res/layout/search",
                "src/main/res/layout/splash",
                "src/main/res/layout/main",
                "src/main/res/layout/common",
                "src/main/res/layout",
                "src/main/res"
            ]
        }
    }
}

dependencies {
    // 引入公共模块
    implementation project(":core")
    // libs文件夹下的jar包
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // android支持兼容扩展库
    androidTestImplementation(library.android_support_espresso_core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // 注解注入view
    annotationProcessor library.butterknife_compiler
}
